/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.12 ./public/models/newModels/RegularJet2.gltf --transform -t 
Files: ./public/models/newModels/RegularJet2.gltf [602.13KB] > RegularJet2-transformed.glb [53.36KB] (91%)
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { Mask, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Circle002: THREE.Mesh;
    Circle002_1: THREE.Mesh;
    Circle002_2: THREE.Mesh;
    Mask: THREE.Mesh;
  };
  materials: {
    Glossy: THREE.MeshStandardMaterial;
    White: THREE.MeshPhysicalMaterial;
    Black: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function RegularJet2(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/RegularJet2-transformed.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group
        position={[10.717, 0, -0.076]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.217}
      >
        <mesh geometry={nodes.Circle002.geometry} material={materials.Glossy} />
        <mesh
          geometry={nodes.Circle002_1.geometry}
          material={materials.White}
        />
        <mesh
          geometry={nodes.Circle002_2.geometry}
          material={materials.Black}
        />
      </group>
      <Mask id={2} rotation={[0, 0, 0]} position={[0, 0, 0]}>
        <planeGeometry args={[1, 1]} />
        {/* <meshBasicMaterial color={"salmon"}/> */}
      </Mask>
      <Mask
        id={2}
        geometry={nodes.Mask.geometry}
        material={nodes.Mask.material}
        position={[10.717, 0, -0.014]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.189}
      />
    </group>
  );
}

useGLTF.preload("/RegularJet2-transformed.glb");
