/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 public/models/CornerRoundSteps.glb -ts s
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Corner_round_steps: THREE.Mesh
  }
  materials: {
    ['Pool wall mosaic']: THREE.MeshStandardMaterial
  }
}

export function CornerRoundSteps(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/CornerRoundSteps.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Corner_round_steps.geometry} material={materials['Pool wall mosaic']} />
    </group>
  )
}

useGLTF.preload('/models/CornerRoundSteps.glb')
