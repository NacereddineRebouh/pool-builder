/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./public/models/newModels/regular_jet2.gltf --transform -t 
Files: ./public/models/newModels/regular_jet2.gltf [599.7KB] > regular_jet2-transformed.glb [52.44KB] (91%)
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Circle002: THREE.Mesh
    Circle002_1: THREE.Mesh
    Circle002_2: THREE.Mesh
  }
  materials: {
    Glossy: THREE.MeshStandardMaterial
    White: THREE.MeshPhysicalMaterial
    Black: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/regular_jet2-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[10.717, 0, -0.148]} rotation={[Math.PI / 2, 0, 0]} scale={0.217}>
        <mesh geometry={nodes.Circle002.geometry} material={materials.Glossy} />
        <mesh geometry={nodes.Circle002_1.geometry} material={materials.White} />
        <mesh geometry={nodes.Circle002_2.geometry} material={materials.Black} />
      </group>
    </group>
  )
}

useGLTF.preload('/regular_jet2-transformed.glb')
